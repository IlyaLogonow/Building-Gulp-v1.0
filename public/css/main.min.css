.footer .footer__list .footer__item a,.header .basket-link,.header .main-nav__item a,.swiper-container .swiper-text .swiper-text__btn a{-webkit-transition:all .5s ease-out;-o-transition:all .5s ease-out;transition:all .5s ease-out}*,:after,:before{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}a:active,a:focus{outline:0}body,html{height:100%}html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}body{font-family:"Barlow",sans-serif}.visibility-hidden{display:none}a{text-decoration:none}.btn-reset{background:0 0;padding:0;border:0;cursor:pointer}input[type=text]{font:inherit/inherit inherit;margin:0}ul{list-style:none}.wrapper{min-height:100px;overflow:hidden}.container{max-width:1360px;padding:0 15px;margin:0 auto;position:relative}.header{min-height:150px}.header .main-nav{min-height:150px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.header .main-nav,.header .main-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.header .main-nav__item:not(:last-child){margin-right:59px}.header .main-nav__item:last-child{margin-right:112px}.header .main-nav__item a{font-weight:400;font-size:18px;line-height:22px;color:#050215}.header .main-nav__item a:active,.header .main-nav__item a:focus,.header .main-nav__item a:hover{color:#b4977b}.header .basket-link:active,.header .basket-link:focus,.header .basket-link:hover{-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}.header .basket{background:url(/img/basket.svg) no-repeat;width:24px;height:28px}.swiper-container{min-height:751px;position:relative}.swiper-container .swiper-text{margin-top:146px;max-width:650px;float:right}.swiper-container .swiper-text .swiper-text__title{max-width:517px;font-weight:600;font-size:64px;line-height:77px;color:#050215;margin-bottom:43px}.swiper-container .swiper-text .swiper-text__subtitle{font-weight:400;font-size:18px;line-height:32px;color:rgba(5,2,21,.75);margin-bottom:51px}.swiper-container .swiper-text .swiper-text__btn{margin-bottom:251px}.swiper-container .swiper-text .swiper-text__btn a{font-weight:500;font-size:18px;line-height:179.5%;color:#fff;background:#b4977b;border-radius:50px;padding:14px 32px}.swiper-container .swiper-text .swiper-text__btn a:active,.swiper-container .swiper-text .swiper-text__btn a:focus,.swiper-container .swiper-text .swiper-text__btn a:hover{background:#050215;border-radius:0}.swiper-container .swiper-slide__img{width:517px;height:800px;position:absolute;top:-150px}.swiper-container .group1{background:url(/img/Group1.svg) no-repeat;position:absolute;top:468.27px;right:106.79px;width:129.96px;height:194.7px}.swiper-container .group2{background:url(/img/Group2.svg) no-repeat;position:absolute;bottom:-180px;right:0;width:181px;height:240px}.footer{min-height:141px;margin-bottom:38px}.footer .footer__list,.footer .footer__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.footer .footer__wrapper{min-height:141px;margin-left:63px}.footer .footer__list{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer .footer__list .footer__item a{font-weight:500;font-size:14px;line-height:17px;text-transform:uppercase;color:#050215}.footer .footer__list .footer__item a:active,.footer .footer__list .footer__item a:focus,.footer .footer__list .footer__item a:hover{color:#b4977b}.footer .footer__list .footer__item:not(:last-child){margin-right:94px}@supports (-webkit-appearance:none){.header .basket{background-image:url(/img/basket.svg) no-repeat}.swiper-container .group1{background-image:url(/img/Group1.svg) no-repeat}.swiper-container .group2{background-image:url(/img/Group2.svg) no-repeat}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */